plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.capstone'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'com.github.f4b6a3:ulid-creator:5.2.3'

	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.0'

	implementation("org.mapstruct:mapstruct:1.6.3")
	implementation("org.mapstruct:mapstruct-processor:1.6.3")
  
  	//security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// Integration Test
	testImplementation("io.rest-assured:rest-assured:5.5.1")
	runtimeOnly("com.github.scribejava:scribejava-apis:8.3.3")

	// aws
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.0.1'
	implementation 'software.amazon.awssdk:s3:2.27.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

processResources.dependsOn('copyGitSubmodule')
tasks.register('copyGitSubmodule', Copy) {
	from 'submodule/server'
	include '*.yml'
	exclude 'application-test.yml'
	into 'src/main/resources'
}

processTestResources.dependsOn('copyTestGitSubmodule')
tasks.register('copyTestGitSubmodule', Copy) {
	from 'submodule/server'
	include 'application-test.yml'
	into 'src/test/resources'
}
