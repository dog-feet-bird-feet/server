# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub Repository에 올린 파일 불러오기
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_SUBMODULE_TOKEN }}

      - name: JDK 21 버전 설치
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      - name: 테스트를 제외한 빌드
        run: |
          cd ./server/
          chmod +x ./gradlew
          ./gradlew clean build

      - name: 빌드된 파일 명 변경
        run: mv ./server/build/libs/*SNAPSHOT.jar ./project.jar

      - name: SCP로 EC2에 빌드된 파일 전송
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.jar
          target: ./server/tobe

      - name: ssh 원격 접속
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            rm -rf ./server/current
            mkdir /server./current
            mv ./server/tobe/project.jar ./server/current/project.jar
            cd ./server/current
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar project.jar > ./output.log 2>&1 &
            rm -rf ./server/tobe
